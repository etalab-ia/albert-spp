stages:
  - test
  - build

.build_template:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - | # build and push image to gitlab registry
      docker login --username gitlab-ci-token --password $CI_JOB_TOKEN $CI_REGISTRY

      if [[ $CI_COMMIT_BRANCH == "dev" ]]; then
        docker build --tag ${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA} $BUILD_ARGS $BUILD_CONTEXT
        docker push ${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}
        docker tag ${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA} ${IMAGE_NAME}:latest
        docker push ${IMAGE_NAME}:latest

      elif [[ $CI_COMMIT_BRANCH == "main" ]]; then
        docker build --tag ${IMAGE_NAME}:stable $BUILD_ARGS $BUILD_CONTEXT
        docker push ${IMAGE_NAME}:stable

      fi

cache:
  paths:
    - .cache/pip
    - venv/

test:
  stage: test
  image: python:3.10-slim
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
      changes:
        - "**/*.py"
      when: always
  before_script:
  - |
    python -m venv venv
    source venv/bin/activate
    pip install --cache-dir .cache/pip .[test]
  script:
    - pytest -W ignore

build:
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  stage: build
  variables:
    IMAGE_NAME: "${CI_REGISTRY_IMAGE}/api"
    BUILD_CONTEXT: "."
    BUILD_ARGS: "--file ./Dockerfile"
  extends: .build_template
